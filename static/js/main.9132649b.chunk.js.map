{"version":3,"sources":["actions/action.js","App.jsx","reducers/reducer.js","reducers/index.js","store/store.js","index.js"],"names":["REQUEST_IMAGE","GET_IMAGE","FAILED_REQUEST","fetchDog","dispatch","console","log","type","fetch","then","r","json","payload","message","getImage","error","failedRequest","connect","state","imagePath","reducer","isFetching","fetchTheDog","style","width","display","onClick","src","alt","initialState","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"4JAAaA,EAAgB,gBAChBC,EAAY,YACZC,EAAiB,iBAMjBC,EAAW,WACtB,OAAO,SAACC,GAIN,OAHAC,QAAQC,IAAI,6BACZF,EAP6B,CAAEG,KAAMP,IAQrCK,QAAQC,IAAI,qBACLE,MAAM,2CACVC,MAAK,SAACC,GAAD,OAAOA,EAAEC,OACdF,MACC,SAACE,GAAD,OAAUP,EAXM,SAACO,GAAD,MAAW,CAAEJ,KAAMN,EAAWW,QAASD,EAAKE,SAWzCC,CAASH,OAC5B,SAACI,GAAD,OAAWX,EAXU,SAACW,GAAD,MAAY,CAAER,KAAML,EAAgBU,QAASG,GAW9CC,CAAcD,Y,OCM1C,IAeeE,eAfS,SAACC,GAAD,MAAY,CAClCC,UAAWD,EAAME,QAAQD,UACzBE,WAAYH,EAAME,QAAQC,eASD,SAACjB,GAAD,MAAe,CACxCkB,YAAa,kBAAMlB,EAASD,SAGfc,EAlCf,YAAsD,IAAvCI,EAAsC,EAAtCA,WAAYF,EAA0B,EAA1BA,UAAWG,EAAe,EAAfA,YAEpC,OACED,EAAa,2CAEb,sBAAKE,MAAO,CAAEC,MAAO,KAArB,UACE,wBACAD,MAAO,CAAEE,QAAS,SAClBC,QAAUJ,EACVf,KAAK,SAHL,2BAOA,qBAAKgB,MAAO,CAAEC,MAAO,QAAUG,IAAKR,EAAWS,IAAI,c,qBCXnDC,EAAe,CACnBR,YAAY,EACZF,UAAW,GACXJ,MAAM,IAgBOK,MAbf,WAAgD,IAA/BF,EAA8B,uDAAtBW,EAAcC,EAAQ,uCAC7C,OAAQA,EAAOvB,MACb,KAAKP,EACH,OAAO,2BAAKkB,GAAZ,IAAmBG,YAAY,IACjC,KAAKpB,EACH,OAAO,2BAAKiB,GAAZ,IAAmBC,UAAWW,EAAOlB,QAASS,YAAY,IAC5D,KAAKnB,EACH,OAAO,2BAAKgB,GAAZ,IAAmBH,MAAOe,EAAOlB,QAASS,YAAY,IACxD,QACE,OAAOH,ICdEa,EAFKC,0BAAgB,CAAEZ,Y,QCMvBa,EANDC,sBAAYH,EAAaI,8BAAoBC,0BAAgBC,OCC3EC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAQA,EAAlB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.9132649b.chunk.js","sourcesContent":["export const REQUEST_IMAGE = 'REQUEST_IMAGE';\nexport const GET_IMAGE = 'GET_IMAGE';\nexport const FAILED_REQUEST = 'FAILED_REQUEST';\n\nexport const requestDog = () => ({ type: REQUEST_IMAGE });\nexport const getImage = (json) => ({ type: GET_IMAGE, payload: json.message });\nexport const failedRequest = (error) => ({ type: FAILED_REQUEST, payload: error });\n\nexport const fetchDog = () => {\n  return (dispatch) => {\n    console.log('disparando a requestDog()')\n    dispatch(requestDog());\n    console.log('Iniciando o fetch')\n    return fetch('https://dog.ceo/api/breeds/image/random')\n      .then((r) => r.json()\n      .then(\n        (json) => dispatch(getImage(json)),\n        (error) => dispatch(failedRequest(error)),\n      ));\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDog } from './actions/action';\n\nfunction App({ isFetching, imagePath, fetchTheDog }) {\n  // console.log(this.props);\n  return (\n    isFetching ? <p>Loading...</p>\n    : (\n    <div style={{ width: 500 }}>\n      <button\n      style={{ display: 'block' }}\n      onClick={ fetchTheDog }\n      type=\"button\"\n      >\n        Novo Doguinho\n      </button>\n      <img style={{ width: '100%' }} src={imagePath} alt=\"dog\" />\n    </div>\n    )\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  imagePath: state.reducer.imagePath,\n  isFetching: state.reducer.isFetching,\n});\n\n// Para Testar depois:\n// const mapStateToProps = ({ imagePath, isFetching }) => ({\n//   src: imagePath,\n//   isFetching: isFetching,\n// });\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTheDog: () => dispatch(fetchDog())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  REQUEST_IMAGE,\n  GET_IMAGE,\n  FAILED_REQUEST,\n} from '../actions/action';\n\nconst initialState = {\n  isFetching: false,\n  imagePath: '',\n  error:'',\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case REQUEST_IMAGE:\n      return { ...state, isFetching: true };\n    case GET_IMAGE:\n      return { ...state, imagePath: action.payload, isFetching: false }\n    case FAILED_REQUEST:\n      return { ...state, error: action.payload, isFetching: false }\n    default:\n      return state;\n  }\n}\n\nexport default reducer","import { combineReducers } from \"redux\";\n// importar os reducers\n// Via de regra deve-se criar um reducer para cada atributo do estado da aplicação\nimport reducer from './reducer';\n\nconst rootReducer = combineReducers({ reducer })\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n// Versão com devtools extension:\n// const store = createStore(rootReducer, composeWithDevTools())\n// É possível utilizar o composeWithDevTools com middleware\n// const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;\n\n// Caso deseje instalar o redux devtools\n// npm install --save redux-devtools-extension\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}